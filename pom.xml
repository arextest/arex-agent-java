<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.arex</groupId>
    <artifactId>arex-agent-parent</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>arex-agent-java</name>
    <url>https://github.com/arextest/arex-agent-java</url>

    <scm>
        <url>https://github.com/arextest/arex-agent-java</url>
        <connection>scm:git:https://github.com/arextest/arex-agent-java.git</connection>
        <developerConnection>scm:git:https://github.com/arextest/arex-agent-java.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/arextest/arex-agent-java/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>AREX</name>
            <email>arex.test.com@gmail.com</email>
            <organization>AREX group</organization>
            <organizationUrl>http://www.arextest.com</organizationUrl>
        </developer>
    </developers>

    <modules>
        <module>arex-agent</module>
        <module>arex-agent-bootstrap</module>
        <module>arex-agent-core</module>
        <module>arex-instrumentation</module>
        <module>arex-instrumentation-foundation</module>
        <module>arex-attacher</module>
        <module>arex-integration-tests</module>
        <module>arex-instrumentation-api</module>
        <module>arex-third-party</module>
    </modules>

    <properties>
        <!-- Maven CI Friendly Versions https://maven.apache.org/maven-ci-friendly.html -->
        <revision>0.4.8</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- -dependencies versions -->
        <java.version>1.8</java.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <slf4j.version>1.7.25</slf4j.version>
        <byte-buddy.version>1.14.9</byte-buddy.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <auto-service.version>1.0</auto-service.version>
        <enforcer.qBanDuplicateClasses.skip>true</enforcer.qBanDuplicateClasses.skip>
        <commons-lang3.version>3.7</commons-lang3.version>
        <version.junit-jupiter>5.8.2</version.junit-jupiter>
        <mockito-junit-jupiter.version>4.7.0</mockito-junit-jupiter.version>
        <jackson.version>2.13.1</jackson.version>
        <gson.version>2.10.1</gson.version>
        <sonar.exclusions>
            **/test/**,
            **/*Test.java,
            **/target/**,
            **/model/**,
            **/constants/**,
            **/thirdparty/**,
            **/integrationtest/**,
            **/*Instrumentation.java,
            **/JJWTGenerator.java
        </sonar.exclusions>
        <sonar.test.exclusions>
            **/test/**,
            **/*Test.java
        </sonar.test.exclusions>
        <sonar.coverage.exclusions>
            **/test/**,
            **/*Test.java,
            **/*Transformer.java,
            **/*Constants.java,
            **/target/**,
            **/model/**,
            **/constants/**,
            **/context/**,
            **/foundation/internal/**,
            **/bootstrap/internal/**,
            **/wrapper/**,
            **/thirdparty/**,
            **/integrationtest/**,
            **/RedisCommandBuilderImpl.java,
            **/HttpResponseWrapper.java,
            **/RFutureWrapper.java
        </sonar.coverage.exclusions>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-agent</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-agent-bootstrap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-agent-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-instrumentation-foundation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-instrumentation-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>arex-third-party</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${auto-service.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${version.junit-jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${version.junit-jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${version.junit-jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>default</id>
            <properties>
                <jarName>${project.artifactId}</jarName>
                <assembly-xml-path>src/main/assembly/assembly.xml</assembly-xml-path>
                <assembly-id>agent</assembly-id>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>jar-with-version</id>
            <properties>
                <jarName>${project.artifactId}-${project.version}</jarName>
                <assembly-xml-path>src/main/assembly/assembly.xml</assembly-xml-path>
                <assembly-id>agent-${project.version}</assembly-id>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${jarName}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>
                        @{argLine}
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.math=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --add-opens java.base/java.net=ALL-UNNAMED
                        --add-opens java.base/java.time=ALL-UNNAMED
                        --add-opens java.xml/com.sun.org.apache.xerces.internal.jaxp.datatype=ALL-UNNAMED
                        --add-opens java.base/jdk.internal.loader=ALL-UNNAMED
                    </argLine>
                    <properties>
                        <!-- https://junit.org/junit5/docs/current/user-guide/#writing-tests-parallel-execution -->
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled = true
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <linkXRef>false</linkXRef>
                </configuration>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
